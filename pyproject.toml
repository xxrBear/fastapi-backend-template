[project]
name = "fastapi-backend-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "bcrypt>=4.3.0",
    "fastapi>=0.115.11",
    "httpx>=0.28.1",
    "itsdangerous>=2.2.0",
    "passlib>=1.7.4",
    "psycopg2>=2.9.10",
    "pydantic-settings>=2.8.1",
    "pytest>=8.3.5",
    "sqlmodel>=0.0.23",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.1.0",
    "ruff>=0.9.9",
]

[tool.ruff]
# 排除的文件或目录
exclude = [
    "build/", # 构建输出目录
    "dist/", # 分发文件目录
    "*.egg-info/", # Python 包的元数据目录
    "__pycache__/", # Python 缓存文件目录
    ".pytest_cache/", # pytest 缓存目录
    ".mypy_cache/", # mypy 缓存目录
    ".venv/", # 虚拟环境目录
    "venv/", # 虚拟环境目录
    "env/", # 虚拟环境目录
    "tests/data/", # 测试数据目录
    "**/*.json", # 所有 JSON 文件
    "**/*.csv", # 所有 CSV 文件
    "**/*.xml", # 所有 XML 文件
    "migrations/", # Django 迁移文件目录
    "**/generated/", # 自动生成的代码目录
    "vendor/", # 第三方库目录
    "lib/", # 第三方库目录
    ".*", # 所有隐藏文件和目录
    ".git/", # Git 目录
    ".github/", # GitHub 配置目录
    ".idea/", # PyCharm 配置目录
    ".vscode/", # VS Code 配置目录
    "**/__init__.py", # 所有 __init__.py 文件
    "setup.py", # 项目的 setup.py 文件
    "requirements.txt", # 依赖文件
    "*.log", # 所有日志文件
    "**/*.ipynb", # 所有 Jupyter Notebook 文件

    # custom
    "init_db.py"
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    #    "B", # flake8-bugbear
    #    "C4", # flake8-comprehensions
    #    "UP", # pyupgrade
]

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
